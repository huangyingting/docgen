import React from 'react';

const FinancialReport = ({ data }) => {
  const currentDate = new Date().toLocaleDateString();
  const totalRevenue = data.revenue || 0;
  const totalExpenses = data.expenses || 0;
  const netProfit = totalRevenue - totalExpenses;

  return (
    <div className="report-container" id="financial-report">
      <div className="report-header">
        <h1>Financial Report</h1>
        <div className="report-meta">
          <p><strong>Generated:</strong> {currentDate}</p>
          <p><strong>Period:</strong> {data.period}</p>
        </div>
      </div>
      
      <div className="report-content">
        <div className="financial-summary">
          <h3>Financial Summary</h3>
          <div className="summary-grid">
            <div className="summary-item">
              <h4>Total Revenue</h4>
              <p className="amount positive">${totalRevenue.toLocaleString()}</p>
            </div>
            <div className="summary-item">
              <h4>Total Expenses</h4>
              <p className="amount negative">${totalExpenses.toLocaleString()}</p>
            </div>
            <div className="summary-item">
              <h4>Net Profit</h4>
              <p className={`amount ${netProfit >= 0 ? 'positive' : 'negative'}`}>
                ${netProfit.toLocaleString()}
              </p>
            </div>
            <div className="summary-item">
              <h4>Profit Margin</h4>
              <p className="percentage">
                {totalRevenue > 0 ? ((netProfit / totalRevenue) * 100).toFixed(2) : 0}%
              </p>
            </div>
          </div>
        </div>
        
        <div className="revenue-breakdown">
          <h3>Revenue Breakdown</h3>
          <table className="financial-table">
            <thead>
              <tr>
                <th>Category</th>
                <th>Amount</th>
                <th>Percentage</th>
              </tr>
            </thead>
            <tbody>
              {data.revenueBreakdown?.map((item, index) => (
                <tr key={index}>
                  <td>{item.category}</td>
                  <td>${item.amount.toLocaleString()}</td>
                  <td>{((item.amount / totalRevenue) * 100).toFixed(1)}%</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
        
        <div className="expense-breakdown">
          <h3>Expense Breakdown</h3>
          <table className="financial-table">
            <thead>
              <tr>
                <th>Category</th>
                <th>Amount</th>
                <th>Percentage</th>
              </tr>
            </thead>
            <tbody>
              {data.expenseBreakdown?.map((item, index) => (
                <tr key={index}>
                  <td>{item.category}</td>
                  <td>${item.amount.toLocaleString()}</td>
                  <td>{((item.amount / totalExpenses) * 100).toFixed(1)}%</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
      
      <div className="report-footer">
        <p>Report generated by React PDF Export System</p>
      </div>
    </div>
  );
};

export default FinancialReport;